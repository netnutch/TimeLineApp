apply plugin: 'com.android.application'

android {
    signingConfigs {

        release {
            //load resources from local.properties
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
            properties.load(inputStream)

            //
            def sdkDir = properties.getProperty('key.file')
            storeFile file(sdkDir)

            //read key
            def key_keyAlias = properties.getProperty('keyAlias')
            def key_keyPassword = properties.getProperty('keyPassword');
            def key_storePassword = properties.getProperty('storePassword');

            storePassword key_storePassword
            keyAlias key_keyAlias
            keyPassword key_keyPassword
        }
        debug {
            //load resources from local.properties
            Properties properties = new Properties()
            InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
            properties.load(inputStream)

            //
            def sdkDir = properties.getProperty('key.file')
            storeFile file(sdkDir)

            //read key
            def key_keyAlias = properties.getProperty('keyAlias')
            def key_keyPassword = properties.getProperty('keyPassword');
            def key_storePassword = properties.getProperty('storePassword');

            storePassword key_storePassword
            keyAlias key_keyAlias
            keyPassword key_keyPassword

        }

    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    def vCode = getVersionCode()
    def vName = getVersionName()


    defaultConfig {
        applicationId 'com.tignioj.timelineapp'
        minSdkVersion 16
        targetSdkVersion 29
        versionCode vCode
        versionName vName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        android.defaultConfig.vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

}
/**
 * 获取名称
 * @return
 */
def getVersionName() {

    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
    properties.load(inputStream)
    def versionCode = properties.getProperty('version.name')
    return versionCode.toString()

}

/**
 * 根据版本名称获取版本号
 * @return
 */
//获取版本code,通过100 000 000 关联versionName
def getVersionCode() {
    def versionSplite = getVersionName().split("\\.")
    println(versionSplite.toString())
    StringBuffer sb = new StringBuffer();
    for (item in versionSplite) {
        switch (item.length()) {
            case 1:
                sb.append('00');
                sb.append(item);
                break
            case 2:
                sb.append('0');
                sb.append(item);
                break
            case 3:
                sb.append(item);
                break
            default:
                throw new GradleException("version name is error !")
                break
        }
    }
    return sb.toInteger()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.navigation:navigation-fragment:2.2.2'
    implementation 'androidx.navigation:navigation-ui:2.2.2'

//MD
    implementation 'com.google.android.material:material:1.1.0'

//ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'


//    room start ========================
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

}